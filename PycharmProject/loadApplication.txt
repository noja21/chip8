def loadApplication(self, filename):
    self.init()
    print("Loading: %s" % filename)
    
    # Open file
    try:
        pFile = open(filename, "r+b")
    except:
        sys.stderr.write("File error\n")
        return False
    
    # Check file size
    fseek(pFile, 0, SEEK_END);
    long lSize = ftell(pFile);
    rewind(pFile);
    printf("Filesize: %d\n", (int) lSize);
    
    # Allocate memory to contain the whole file
    char * buffer = (char*) malloc(sizeof (char) * lSize);
    if (buffer == NULL) {
        fputs("Memory error", stderr);
        return false;
    }
    
    # Copy the file into the buffer
    size_t result = fread(buffer, 1, lSize, pFile);
    if (result != lSize) {
        fputs("Reading error", stderr);
        return false;
    }
    
    # Copy buffer to Chip8 memory
    if ((4096 - 512) > lSize) {
        for (int i = 0; i < lSize; ++i)
            memory[i + 512] = buffer[i];
    } else
        printf("Error: ROM too big for memory");
    
    # Close file, free buffer
    fclose(pFile);
    free(buffer);
    
    return True